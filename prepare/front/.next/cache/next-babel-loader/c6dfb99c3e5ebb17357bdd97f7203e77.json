{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ActionButton from \"antd/lib/modal/ActionButton\";\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpDate: {},\n    loginDate: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport var loginAction = function loginAction(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction() {\n  return {\n    type: \"LOG_OUT\"\n  };\n}; // A~ C까지는 이해용\n//A\n//중앙 저장소\n// const initialState = {\n//     name:'amin',\n//     age:25,\n//     password:'1234',\n// };\n//action(객체) 생성\n// const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data: 'jung',\n// }\n// const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data: 'juna',\n// }\n//비효율적 -> [action creator]액선 생성 함수를 이용하자\n// const changeNickname = (data) =>{\n//     return {\n//         type: 'CHANGE_NICKNAME',\n//         data:data,\n//     }\n// };\n//C\n//(이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (ActionButton.type) {\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/gimjeong-eum/react-node/prepare/front/reducers/index.js"],"names":["ActionButton","initialState","user","isLoggedIn","signUpDate","loginDate","post","mainPosts","loginAction","data","type","logoutAction","rootReducer","state","action"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,6BAAzB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADa;AAOnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPa,CAArB;AAYA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBZ,YAAyB;AAAA,MAAXa,MAAW;;AACpD,UAAQd,YAAY,CAACU,IAArB;AACE,SAAK,QAAL;AACE,6CACKG,KADL;AAEEX,QAAAA,IAAI,kCACCW,KAAK,CAACX,IADP;AAEFC,UAAAA,UAAU,EAAE,IAFV;AAGFD,UAAAA,IAAI,EAAEY,MAAM,CAACL;AAHX;AAFN;;AAQF,SAAK,SAAL;AACE,6CACKI,KADL;AAEEX,QAAAA,IAAI,kCACCW,KAAK,CAACX,IADP;AAEFC,UAAAA,UAAU,EAAE,KAFV;AAGFD,UAAAA,IAAI,EAAE;AAHJ;AAFN;AAXJ;AAoBD,CArBD;;AAuBA,eAAeU,WAAf","sourcesContent":["import ActionButton from \"antd/lib/modal/ActionButton\";\n\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpDate: {},\n    loginDate: {},\n  },\n  post: {\n    mainPosts: [],\n  },\n};\n\nexport const loginAction = (data) => {\n  return {\n    type: \"LOG_IN\",\n    data: data,\n  };\n};\n\nexport const logoutAction = () => {\n  return {\n    type: \"LOG_OUT\",\n  };\n};\n\n// A~ C까지는 이해용\n//A\n//중앙 저장소\n// const initialState = {\n//     name:'amin',\n//     age:25,\n//     password:'1234',\n\n// };\n\n//action(객체) 생성\n// const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data: 'jung',\n// }\n\n// const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data: 'juna',\n// }\n\n//비효율적 -> [action creator]액선 생성 함수를 이용하자\n// const changeNickname = (data) =>{\n//     return {\n//         type: 'CHANGE_NICKNAME',\n//         data:data,\n//     }\n// };\n//C\n\n//(이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (ActionButton.type) {\n    case \"LOG_IN\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: true,\n          user: action.data,\n        },\n      };\n    case \"LOG_OUT\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: false,\n          user: null,\n        },\n      };\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}